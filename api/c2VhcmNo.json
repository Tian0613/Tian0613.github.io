[{"title":"刷机","date":"2022-06-28T14:45:47.000Z","date_formatted":{"ll":"2022年6月28日","L":"2022/06/28","MM-DD":"06-28"},"updated":"2022-10-13T12:12:17.944Z","content":"安卓分区\n\nBoot\nSystem\nData\nCache\nRecovery\nRadio\nAB 分区（两套 boot, system）\nVAB 分区\n\n备份\n\n云备份\n本地备份\n第三方备份\n\n解BL锁\n\nbootloader\n\n卡刷\n\n第三方 rec，如橙狐、TWRP（线刷刷入）\n刷入 ROM\n刷入 Magisk\n\n线刷\n\nfastboot\n提取 boot.img ，Magisk 修补，刷入修补后的 boot.img\n\n救砖\n\n删模块\nfastboot 线刷\n9008\n\nfastboot常用命令\n\n显示设备\n\n1fastboot devices\n\n重启手机\n\n1fastboot reboot （recovery/bootloader)\n\n刷写分区\n\n1fastboot flash 分区名 分区镜像\n\n擦除分区\n\n1fastboot erase 分区名\n\n刷入ROM\n\n1fastboot update 官方包\n\n引导启动镜像\n\n1fastboot boot 分区镜像\n\n设备上锁\n\n1fastboot flashing lock\n\n获取手机相关信息\n\n1fastboot getvar all\n杂项\n\n底包：卡刷第三方 ROM，实际上只是刷了 boot 和 system 两个分区（俗称内核和系统）。对于大多数手机来说，除了这两个分区，还包括基带、Modem、TrustZone 等必不可少的分区，这些分区的版本是需要和系统或内核里相关的驱动版本一致才可以正常工作。比方说，如果系统里的驱动更新了，而 TrustZone 没有更新，那么指纹传感器可能会不正常；Modem 版本不对，可能会没有网络。而每次都下载官方完整包十分麻烦，这就促使了底包的诞生，底包在保证体积的同时拥有和完整包相同的作用\n双清（恢复出厂设置）：清除data和cache分区\n四清：清除data、cache、system、dalvik cache分区\n格式化 Data：清除一切数据\n卡刷和线刷区别：线刷一般是手机生产厂商所采取的一种升级方式，针对智能手机系统问题或非硬件损坏的手机故障来刷写固件，替换和覆盖各个分区所有可能被修改或者损坏的文件，使手机功能恢复正常；卡刷就是用SD卡作为储存介质来存放ROM文件（手机操作系统文件），本质是对系统文件替换的过程，不会重新刷写整个分区，只是替换部分系统分区文件来实现对手机内软件版本升级或更换第三方操作系统。线刷包一般包含各个分区文件，相当于从底层把整个手机刷机，卡刷包一般只包含system和boot\n\n常用网址\n工具\n\nMagisk https://github.com/topjohnwu/Magisk\nSDK Platform Tools https://developer.android.google.cn/studio/releases/platform-tools?hl=zh-cn\nLSPosed https://github.com/LSPosed/LSPosed/releases\n\nREC\n\nTWRP https://twrp.me/\nOrangeFox https://wiki.orangefox.tech/en/home\n\n类原生\n\nPE https://download.pixelexperience.org/\ndot https://www.droidontime.com/\nArrow https://arrowos.net/\nLineage https://lineageos.org/\ncrDroid https://crdroid.net/\nHavoc https://havoc-os.com/\n魔趣 https://www.mokeedev.com/\n\n","thumbnail":"/images/shuaji.jpg","plink":"http://tianyu13.cn/post/post3/"},{"title":"高考","date":"2022-05-21T11:49:07.000Z","date_formatted":{"ll":"2022年5月21日","L":"2022/05/21","MM-DD":"05-21"},"updated":"2022-10-13T12:12:17.944Z","content":"\n有遗憾的感觉\n为何感觉\n那消失不见的素颜\n\n\n高考\n又是一年高考季，自己高中毕业也快一年了，回想起高中点滴，每天起早贪黑，刷题测验，虽然辛苦，但目标明确——考一所好大学。高中生活还是很让人怀念的 (ﾉ∇︎〃 )。\n大学\n去年刚开学时，我还保留着高中对大学生活的那一份期待，学习动力很足，也愿意参加活动，但时间一久，我感受到的更多是迷茫。大学老师专业能力可能很强，但讲课能力真的一般，大多时候都是照着全年级通用的PPT讲一整节课，自己课下还得花很长时间翻看课本自学，还有各种赶DDL的作业。\n我的学校是大类招生，说好听点是文理交叉，通俗点儿就是学得很杂。学得多但考试完就忘一大半，还有一些只是为了成绩而不得不上的没用的水课。甚至我一度怀疑现在学的东西是否真的有用 (||๐_๐)，也许是还没分专业，也许是我才大一。\n不管怎样，时间会给出答案。虽然大学生活有不如意的地方，但也不乏小确幸。多些乐观，多些容忍，不忘“初心”。\n一些照片\nU2FsdGVkX1+0FIKejp1GMCP8MuwkDnC0ZSVhEdACd0A+V/iJHhtY0LEnB1+bbnrW5IAi05fxoAvFtve5iLi6VK4HQ22J6Jnv+Lg4saZy8JLB3/91ZGAtpgThciQ8SKao+rFq2f4NiWq7R31vGCmL7C+4Y/3GlcJzIJSUwIFHQyr8ixtnCLJ64pl4csv1GDkgaWHqx10BheO7lufH7QEG+B8eo8c4VB1S5rk7UUCNFnWihttq0R40d/i/Xjr1/HFxUmQwmz6kIoUhYduKHnHlc527NPIWpTiHqwDI78Zio5HO54/ANXqHW23j07sUXJX768M4kW5xESYC0Ue/B/r5KHFFXJssbXXED7fdlsTjSp0=","thumbnail":"/images/world.jpg","plink":"http://tianyu13.cn/post/post2/"},{"title":"前言","date":"2022-05-10T12:46:22.000Z","date_formatted":{"ll":"2022年5月10日","L":"2022/05/10","MM-DD":"05-10"},"updated":"2022-10-13T12:12:17.944Z","content":"关于博客\n概述\n搭博客一直鸽了好久，总算在五一假期下决心建好了。我选择的是Hexo静态博客，部署到了GitHub Page上，整个过程下来只有域名需要花钱。\n愿景\n博客，首先是给自己看的，知道这个博客的人并不多。对我个人而言，这里可以记录生活点滴，写写随想，也可以当做知识库，记记笔记。自已没有多深的文学素养，写不出精美的文章，也不是什么技术佬，写不出清晰条理的教程，只是胡写一通，乱写一气。\nCreate a new post\n1$ hexo new [layout] &lt;title&gt;  # 三种布局layout：post、page、draft，默认为post\nFront-matter\n12345678910title:date:updated:comments:tags:categories:layout:permalink:# 置顶sticky: 1\n","thumbnail":"/images/hello.jpg","plink":"http://tianyu13.cn/post/post1/"},{"title":"关于","date":"2022-05-21T14:42:03.000Z","date_formatted":{"ll":"2022年5月21日","L":"2022/05/21","MM-DD":"05-21"},"updated":"2022-05-21T14:51:04.341Z","content":"性别男，单身狗，山西人，XDU本科在读。\n","plink":"http://tianyu13.cn/about/"},{"title":"","date":"2022-10-09T08:35:11.191Z","date_formatted":{"ll":"2022年10月9日","L":"2022/10/09","MM-DD":"10-09"},"updated":"2022-10-09T08:35:11.191Z","content":"canvas-ribbon.js for NexT\nInstallation\nIf you want to use the CDN instead of clone this repo, please jump to the Step 3.\nStep 1 &rarr; Go to NexT dir\nChange dir to NexT directory. There must be layout, source, languages and other directories:\n123$ cd themes/next$ ls_config.yml  crowdin.yml  docs  gulpfile.js  languages  layout  LICENSE.md  package.json  README.md  scripts  source\nStep 2 &rarr; Get module\nInstall module to source/lib directory:\n1$ git clone https://github.com/theme-next/theme-next-canvas-ribbon source/lib/canvas-ribbon\nStep 3 &rarr; Set it up\nEnable module in NexT _config.yml file:\n12canvas_ribbon:  enable: true\nAnd, if you wants to use the CDN, then need to set:\n123vendors:  ...  canvas_ribbon: //cdn.jsdelivr.net/gh/theme-next/theme-next-canvas-ribbon@1/canvas-ribbon.js\nUpdate\n12$ cd themes/next/source/lib/canvas-ribbon$ git pull\n","plink":"http://tianyu13.cn/lib/canvas-ribbon/README/"},{"title":"","date":"2022-10-09T08:35:51.271Z","date_formatted":{"ll":"2022年10月9日","L":"2022/10/09","MM-DD":"10-09"},"updated":"2022-10-09T08:35:51.271Z","content":"JavaScript 3D library for NexT\nInstallation\nIf you want to use the CDN instead of clone this repo, please jump to the Step 3.\nStep 1 &rarr; Go to NexT dir\nChange dir to NexT directory. There must be layout, source, languages and other directories:\n123$ cd themes/next$ ls_config.yml  crowdin.yml  docs  gulpfile.js  languages  layout  LICENSE.md  package.json  README.md  scripts  source\nStep 2 &rarr; Get module\nInstall module to source/lib directory:\n1$ git clone https://github.com/theme-next/theme-next-three source/lib/three\nStep 3 &rarr; Set it up\nEnable module in NexT _config.yml file:\n12345three_waves: trueORcanvas_lines: trueORcanvas_sphere: true\nAnd, if you wants to use the CDN, then need to set:\n123456vendors:  ...  three: //cdn.jsdelivr.net/gh/theme-next/theme-next-three@1/three.min.js  three_waves: //cdn.jsdelivr.net/gh/theme-next/theme-next-three@latest/three-waves.min.js  canvas_lines: //cdn.jsdelivr.net/gh/theme-next/theme-next-three@latest/canvas_lines.min.js  canvas_sphere: //cdn.jsdelivr.net/gh/theme-next/theme-next-three@latest/canvas_sphere.min.js\nUpdate\n12$ cd themes/next/source/lib/three$ git pull\n","plink":"http://tianyu13.cn/lib/three/README/"},{"title":"","date":"2022-10-09T08:35:11.191Z","updated":"2022-10-09T08:35:11.191Z","content":"/**\n * Copyright (c) 2016 hustcc\n * License: MIT\n * Version: v1.0.1\n * GitHub: https://github.com/hustcc/ribbon.js\n**/\n/*jshint -W030 */\n! function() {\n  function attr(node, attr, default_value) {\n    return Number(node.getAttribute(attr)) || default_value;\n  }\n\n  // get user config\n  var scripts = document.getElementsByTagName('script'),\n    script = scripts[scripts.length - 1]; // 当前加载的script\n  config = {\n    z: attr(script, \"zIndex\", -1), // z-index\n    a: attr(script, \"alpha\", 0.6), // alpha\n    s: attr(script, \"size\", 90), // size\n  };\n\n  var canvas = document.createElement('canvas'),\n    g2d = canvas.getContext('2d'),\n    pr = window.devicePixelRatio || 1,\n    width = window.innerWidth,\n    height = window.innerHeight,\n    f = config.s,\n    q, t,\n    m = Math,\n    r = 0,\n    pi = m.PI*2,\n    cos = m.cos,\n    random = m.random;\n  canvas.width = width * pr;\n  canvas.height = height * pr;\n  g2d.scale(pr, pr);\n  g2d.globalAlpha = config.a;\n  canvas.style.cssText = 'opacity: ' + config.a + ';position:fixed;top:0;left:0;z-index: ' + config.z + ';width:100%;height:100%;pointer-events:none;';\n  // create canvas\n  document.getElementsByTagName('body')[0].appendChild(canvas);\n\n  function redraw() {\n    g2d.clearRect(0, 0, width, height);\n    q = [{x: 0, y: height * 0.7 + f}, {x: 0, y: height * 0.7 - f}];\n    while(q[1].x < width + f) draw(q[0], q[1]);\n  }\n  function draw(i, j) {\n    g2d.beginPath();\n    g2d.moveTo(i.x, i.y);\n    g2d.lineTo(j.x, j.y);\n    var k = j.x + (random()*2-0.25)*f, n = line(j.y);\n    g2d.lineTo(k, n);\n    g2d.closePath();\n    r -= pi / -50;\n    g2d.fillStyle = '#'+(cos(r)*127+128"},{"title":"","date":"2022-10-09T08:35:51.272Z","updated":"2022-10-09T08:35:51.272Z","content":"THREE.SpriteCanvasMaterial=function(e){THREE.Material.call(this),this.type=\"SpriteCanvasMaterial\",this.color=new THREE.Color(16777215),this.program=function(e,t){},this.setValues(e)},THREE.SpriteCanvasMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteCanvasMaterial.prototype.constructor=THREE.SpriteCanvasMaterial,THREE.SpriteCanvasMaterial.prototype.clone=function(){var e=new THREE.SpriteCanvasMaterial;return e.copy(this),e.color.copy(this.color),e.program=this.program,e},THREE.CanvasRenderer=function(e){console.log(\"THREE.CanvasRenderer\",THREE.REVISION),e=e||{};var s,l,c,p,E,d,h,f,u,m,v,x,R,y,T,w,H,g,S,M=this,b=new THREE.Projector,r=void 0!==e.canvas?e.canvas:document.createElement(\"canvas\"),C=r.width,z=r.height,V=Math.floor(C/2),j=Math.floor(z/2),L=0,O=0,B=C,W=z,n=1,P=r.getContext(\"2d\",{alpha:!0===e.alpha}),i=new THREE.Color(0),o=!0===e.alpha?0:1,a=1,k=0,N=null,F=null,A=null,I=null,D=null,t=[],G=(new THREE.RenderableVertex,new THREE.RenderableVertex,new THREE.Color),U=(new THREE.Color,new THREE.Color,new THREE.Color,new THREE.Color,new THREE.Color),q=new THREE.Color,X=new THREE.Color,J={},Y=new THREE.Box2,$=new THREE.Box2,K=new THREE.Box2,Q=new THREE.Color,Z=new THREE.Color,_=new THREE.Color,ee=new THREE.Vector3,te=new THREE.Vector3,ie=new THREE.Vector3,re=new THREE.Matrix3;function ne(e,t,i){de(i.opacity),he(i.blending);var r=t.scale.x*V,n=t.scale.y*j,o=.5*Math.sqrt(r*r+n*n);if(K.min.set(e.x-o,e.y-o),K.max.set(e.x+o,e.y+o),i instanceof THREE.SpriteMaterial){var a=i.map;if(null!==a){var s=J[a.id];if(void 0!==s&&s.version===a.version||(s=ce(a),J[a.id]=s),void 0!==s.canvas){xe(s.canvas);var l=a.image,c=l.width*a.offset.x,p=l.height*a.offset.y,E=l.width*a.repeat.x,d=l.height*a.repeat.y,h=r/E,f=n/d;P.save(),P.translate(e.x,e.y),0!==i.rotation&&P.rotate(i.rotation),P.translate(-r/2,-n/2),P.scale(h,f),P.translate(-c,-p),P.fillRect(c,p,E,d),P.restore()}}else xe(i.color.getStyle()),P.save(),P.translate(e.x,e.y),0!==i.rotation&&P.rotate(i.rotation),P.scale(r,-n),P.fillRect(-.5,-.5,1,1),P.restore()}else i instanceof THREE.SpriteCanvasMaterial&&(ve(i.color.getStyle()),xe(i.color.getStyle()),P.save(),P.translate(e.x,e.y),0!==i.rotation&&P.rotate(i.rotation),P.scale(r,n),i.program(P),P.restore())}function oe(e,t,i,r){if(de(r.opacity),he(r.blending),P.beginPath(),P.moveTo(e.positionScreen.x,e.positionScreen.y),P.lineTo(t.positionScreen.x,t.positionScreen.y),r instanceof THREE.LineBasicMaterial){if(fe(r.linewidth),ue(r.linecap),me(r.linejoin),r.vertexColors!==THREE.VertexColors)ve(r.color.getStyle());else{var n=i.vertexColors[0].getStyle(),o=i.vertexColors[1].getStyle();if(n===o)ve(n);else{try{var a=P.createLinearGradient(e.positionScreen.x,e.positionScreen.y,t.positionScreen.x,t.positionScreen.y);a.addColorStop(0,n),a.addColorStop(1,o)}catch(e){a=n}ve(a)}}P.stroke(),K.expandByScalar(2*r.linewidth)}else r instanceof THREE.LineDashedMaterial&&(fe(r.linewidth),ue(r.linecap),me(r.linejoin),ve(r.color.getStyle()),Re([r.dashSize,r.gapSize]),P.stroke(),K.expandByScalar(2*r.linewidth),Re([]))}function ae(e,t,i,r,n,o,a,s){if(M.info.render.vertices+=3,M.info.render.faces++,de(s.opacity),he(s.blending),h=e.positionScreen.x,f=e.positionScreen.y,u=t.positionScreen.x,m=t.positionScreen.y,v=i.positionScreen.x,x=i.positionScreen.y,function(e,t,i,r,n,o){P.beginPath(),P.moveTo(e,t),P.lineTo(i,r),P.lineTo(n,o),P.closePath()}(h,f,u,m,v,x),(s instanceof THREE.MeshLambertMaterial||s instanceof THREE.MeshPhongMaterial)&&null===s.map)U.copy(s.color),q.copy(s.emissive),s.vertexColors===THREE.FaceColors&&U.multiply(a.color),G.copy(Q),te.copy(e.positionWorld).add(t.positionWorld).add(i.positionWorld).divideScalar(3),function(e,t,i){for(var r=0,n=c.length;r"},{"title":"","date":"2022-10-09T08:35:51.272Z","updated":"2022-10-09T08:35:51.272Z","content":"THREE.SpriteCanvasMaterial=function(e){THREE.Material.call(this),this.type=\"SpriteCanvasMaterial\",this.color=new THREE.Color(16777215),this.program=function(e,t){},this.setValues(e)},THREE.SpriteCanvasMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteCanvasMaterial.prototype.constructor=THREE.SpriteCanvasMaterial,THREE.SpriteCanvasMaterial.prototype.clone=function(){var e=new THREE.SpriteCanvasMaterial;return e.copy(this),e.color.copy(this.color),e.program=this.program,e},THREE.CanvasRenderer=function(e){console.log(\"THREE.CanvasRenderer\",THREE.REVISION),e=e||{};var s,l,c,p,E,d,h,f,u,m,v,R,x,y,T,w,H,g,S,M=this,b=new THREE.Projector,i=void 0!==e.canvas?e.canvas:document.createElement(\"canvas\"),C=i.width,z=i.height,V=Math.floor(C/2),j=Math.floor(z/2),L=0,O=0,B=C,W=z,n=1,P=i.getContext(\"2d\",{alpha:!0===e.alpha}),r=new THREE.Color(0),o=!0===e.alpha?0:1,a=1,k=0,N=null,F=null,A=null,I=null,D=null,t=[],G=(new THREE.RenderableVertex,new THREE.RenderableVertex,new THREE.Color),U=(new THREE.Color,new THREE.Color,new THREE.Color,new THREE.Color,new THREE.Color),q=new THREE.Color,X=new THREE.Color,J={},Y=new THREE.Box2,$=new THREE.Box2,K=new THREE.Box2,Q=new THREE.Color,Z=new THREE.Color,_=new THREE.Color,ee=new THREE.Vector3,te=new THREE.Vector3,re=new THREE.Vector3,ie=new THREE.Matrix3;function ne(e,t,r){de(r.opacity),he(r.blending);var i=t.scale.x*V,n=t.scale.y*j,o=.5*Math.sqrt(i*i+n*n);if(K.min.set(e.x-o,e.y-o),K.max.set(e.x+o,e.y+o),r instanceof THREE.SpriteMaterial){var a=r.map;if(null!==a){var s=J[a.id];if(void 0!==s&&s.version===a.version||(s=ce(a),J[a.id]=s),void 0!==s.canvas){Re(s.canvas);var l=a.image,c=l.width*a.offset.x,p=l.height*a.offset.y,E=l.width*a.repeat.x,d=l.height*a.repeat.y,h=i/E,f=n/d;P.save(),P.translate(e.x,e.y),0!==r.rotation&&P.rotate(r.rotation),P.translate(-i/2,-n/2),P.scale(h,f),P.translate(-c,-p),P.fillRect(c,p,E,d),P.restore()}}else Re(r.color.getStyle()),P.save(),P.translate(e.x,e.y),0!==r.rotation&&P.rotate(r.rotation),P.scale(i,-n),P.fillRect(-.5,-.5,1,1),P.restore()}else r instanceof THREE.SpriteCanvasMaterial&&(ve(r.color.getStyle()),Re(r.color.getStyle()),P.save(),P.translate(e.x,e.y),0!==r.rotation&&P.rotate(r.rotation),P.scale(i,n),r.program(P),P.restore())}function oe(e,t,r,i){if(de(i.opacity),he(i.blending),P.beginPath(),P.moveTo(e.positionScreen.x,e.positionScreen.y),P.lineTo(t.positionScreen.x,t.positionScreen.y),i instanceof THREE.LineBasicMaterial){if(fe(i.linewidth),ue(i.linecap),me(i.linejoin),i.vertexColors!==THREE.VertexColors)ve(i.color.getStyle());else{var n=r.vertexColors[0].getStyle(),o=r.vertexColors[1].getStyle();if(n===o)ve(n);else{try{var a=P.createLinearGradient(e.positionScreen.x,e.positionScreen.y,t.positionScreen.x,t.positionScreen.y);a.addColorStop(0,n),a.addColorStop(1,o)}catch(e){a=n}ve(a)}}P.stroke(),K.expandByScalar(2*i.linewidth)}else i instanceof THREE.LineDashedMaterial&&(fe(i.linewidth),ue(i.linecap),me(i.linejoin),ve(i.color.getStyle()),xe([i.dashSize,i.gapSize]),P.stroke(),K.expandByScalar(2*i.linewidth),xe([]))}function ae(e,t,r,i,n,o,a,s){if(M.info.render.vertices+=3,M.info.render.faces++,de(s.opacity),he(s.blending),h=e.positionScreen.x,f=e.positionScreen.y,u=t.positionScreen.x,m=t.positionScreen.y,v=r.positionScreen.x,R=r.positionScreen.y,function(e,t,r,i,n,o){P.beginPath(),P.moveTo(e,t),P.lineTo(r,i),P.lineTo(n,o),P.closePath()}(h,f,u,m,v,R),(s instanceof THREE.MeshLambertMaterial||s instanceof THREE.MeshPhongMaterial)&&null===s.map)U.copy(s.color),q.copy(s.emissive),s.vertexColors===THREE.FaceColors&&U.multiply(a.color),G.copy(Q),te.copy(e.positionWorld).add(t.positionWorld).add(r.positionWorld).divideScalar(3),function(e,t,r){for(var i=0,n=c.length;i"},{"title":"","date":"2022-10-09T08:35:51.272Z","updated":"2022-10-09T08:35:51.272Z","content":"const fs = require('fs')\nconst del = require('del')\nconst gulp = require('gulp')\nconst concat = require('gulp-concat')\nconst uglify = require('gulp-uglify')\n\ngulp.task('clean', async () => {\n  del(['*.min.js', '!three.min.js'])\n})\n\ngulp.task('scripts', async () => {\n  const sourceFiles = fs.readdirSync('src')\n  sourceFiles.forEach(file => {\n    const fileName = file.split('.')[0]\n    return gulp.src([`src/${fileName}.js`, 'lib/*.js'])\n      .pipe(concat(`${fileName}.min.js`))\n      .pipe(uglify())\n      .pipe(gulp.dest('./'))\n  })\n})\n\ngulp.task('default', gulp.series('clean', 'scripts'))"},{"title":"","date":"2022-10-09T08:35:51.273Z","updated":"2022-10-09T08:35:51.273Z","content":"{\"name\":\"theme-next-three\",\"version\":\"1.0.0\",\"main\":\"index.js\",\"repository\":\"git@github.com:theme-next/theme-next-three.git\",\"author\":\"Raincal \",\"license\":\"MIT\",\"scripts\":{\"build\":\"gulp\"},\"dependencies\":{\"del\":\"^5.1.0\",\"gulp\":\"^4.0.2\",\"gulp-concat\":\"^2.6.1\",\"gulp-uglify\":\"^3.0.2\"}}"},{"title":"","date":"2022-10-09T08:35:51.274Z","updated":"2022-10-09T08:35:51.274Z","content":"{\"extends\":[\"config:base\"]}"},{"title":"","date":"2022-10-09T08:35:51.275Z","updated":"2022-10-09T08:35:51.275Z","content":"THREE.SpriteCanvasMaterial=function(e){THREE.Material.call(this),this.type=\"SpriteCanvasMaterial\",this.color=new THREE.Color(16777215),this.program=function(e,t){},this.setValues(e)},THREE.SpriteCanvasMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteCanvasMaterial.prototype.constructor=THREE.SpriteCanvasMaterial,THREE.SpriteCanvasMaterial.prototype.clone=function(){var e=new THREE.SpriteCanvasMaterial;return e.copy(this),e.color.copy(this.color),e.program=this.program,e},THREE.CanvasRenderer=function(e){console.log(\"THREE.CanvasRenderer\",THREE.REVISION),e=e||{};var s,l,c,p,E,d,f,h,u,m,v,x,R,y,T,w,H,g,S,M=this,b=new THREE.Projector,i=void 0!==e.canvas?e.canvas:document.createElement(\"canvas\"),C=i.width,z=i.height,V=Math.floor(C/2),j=Math.floor(z/2),L=0,O=0,B=C,W=z,n=1,P=i.getContext(\"2d\",{alpha:!0===e.alpha}),r=new THREE.Color(0),o=!0===e.alpha?0:1,a=1,k=0,N=null,F=null,A=null,I=null,D=null,t=[],G=(new THREE.RenderableVertex,new THREE.RenderableVertex,new THREE.Color),U=(new THREE.Color,new THREE.Color,new THREE.Color,new THREE.Color,new THREE.Color),q=new THREE.Color,J=new THREE.Color,X={},$=new THREE.Box2,K=new THREE.Box2,Q=new THREE.Box2,Y=new THREE.Color,Z=new THREE.Color,_=new THREE.Color,ee=new THREE.Vector3,te=new THREE.Vector3,re=new THREE.Vector3,ie=new THREE.Matrix3;function ne(e,t,r){de(r.opacity),fe(r.blending);var i=t.scale.x*V,n=t.scale.y*j,o=.5*Math.sqrt(i*i+n*n);if(Q.min.set(e.x-o,e.y-o),Q.max.set(e.x+o,e.y+o),r instanceof THREE.SpriteMaterial){var a=r.map;if(null!==a){var s=X[a.id];if(void 0!==s&&s.version===a.version||(s=ce(a),X[a.id]=s),void 0!==s.canvas){xe(s.canvas);var l=a.image,c=l.width*a.offset.x,p=l.height*a.offset.y,E=l.width*a.repeat.x,d=l.height*a.repeat.y,f=i/E,h=n/d;P.save(),P.translate(e.x,e.y),0!==r.rotation&&P.rotate(r.rotation),P.translate(-i/2,-n/2),P.scale(f,h),P.translate(-c,-p),P.fillRect(c,p,E,d),P.restore()}}else xe(r.color.getStyle()),P.save(),P.translate(e.x,e.y),0!==r.rotation&&P.rotate(r.rotation),P.scale(i,-n),P.fillRect(-.5,-.5,1,1),P.restore()}else r instanceof THREE.SpriteCanvasMaterial&&(ve(r.color.getStyle()),xe(r.color.getStyle()),P.save(),P.translate(e.x,e.y),0!==r.rotation&&P.rotate(r.rotation),P.scale(i,n),r.program(P),P.restore())}function oe(e,t,r,i){if(de(i.opacity),fe(i.blending),P.beginPath(),P.moveTo(e.positionScreen.x,e.positionScreen.y),P.lineTo(t.positionScreen.x,t.positionScreen.y),i instanceof THREE.LineBasicMaterial){if(he(i.linewidth),ue(i.linecap),me(i.linejoin),i.vertexColors!==THREE.VertexColors)ve(i.color.getStyle());else{var n=r.vertexColors[0].getStyle(),o=r.vertexColors[1].getStyle();if(n===o)ve(n);else{try{var a=P.createLinearGradient(e.positionScreen.x,e.positionScreen.y,t.positionScreen.x,t.positionScreen.y);a.addColorStop(0,n),a.addColorStop(1,o)}catch(e){a=n}ve(a)}}P.stroke(),Q.expandByScalar(2*i.linewidth)}else i instanceof THREE.LineDashedMaterial&&(he(i.linewidth),ue(i.linecap),me(i.linejoin),ve(i.color.getStyle()),Re([i.dashSize,i.gapSize]),P.stroke(),Q.expandByScalar(2*i.linewidth),Re([]))}function ae(e,t,r,i,n,o,a,s){if(M.info.render.vertices+=3,M.info.render.faces++,de(s.opacity),fe(s.blending),f=e.positionScreen.x,h=e.positionScreen.y,u=t.positionScreen.x,m=t.positionScreen.y,v=r.positionScreen.x,x=r.positionScreen.y,function(e,t,r,i,n,o){P.beginPath(),P.moveTo(e,t),P.lineTo(r,i),P.lineTo(n,o),P.closePath()}(f,h,u,m,v,x),(s instanceof THREE.MeshLambertMaterial||s instanceof THREE.MeshPhongMaterial)&&null===s.map)U.copy(s.color),q.copy(s.emissive),s.vertexColors===THREE.FaceColors&&U.multiply(a.color),G.copy(Y),te.copy(e.positionWorld).add(t.positionWorld).add(r.positionWorld).divideScalar(3),function(e,t,r){for(var i=0,n=c.length;i"},{"title":"","date":"2022-10-09T08:35:51.273Z","updated":"2022-10-09T08:35:51.273Z","content":"/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.SpriteCanvasMaterial = function ( parameters ) {\n\n\tTHREE.Material.call( this );\n\n\tthis.type = 'SpriteCanvasMaterial';\n\n\tthis.color = new THREE.Color( 0xffffff );\n\tthis.program = function ( context, color ) {};\n\n\tthis.setValues( parameters );\n\n};\n\nTHREE.SpriteCanvasMaterial.prototype = Object.create( THREE.Material.prototype );\nTHREE.SpriteCanvasMaterial.prototype.constructor = THREE.SpriteCanvasMaterial;\n\nTHREE.SpriteCanvasMaterial.prototype.clone = function () {\n\n\tvar material = new THREE.SpriteCanvasMaterial();\n\n\tmaterial.copy( this );\n\tmaterial.color.copy( this.color );\n\tmaterial.program = this.program;\n\n\treturn material;\n\n};\n\n//\n\nTHREE.CanvasRenderer = function ( parameters ) {\n\n\tconsole.log( 'THREE.CanvasRenderer', THREE.REVISION );\n\n\tparameters = parameters || {};\n\n\tvar _this = this,\n\t_renderData, _elements, _lights,\n\t_projector = new THREE.Projector(),\n\n\t_canvas = parameters.canvas !== undefined\n\t\t\t ? parameters.canvas\n\t\t\t : document.createElement( 'canvas' ),\n\n\t_canvasWidth = _canvas.width,\n\t_canvasHeight = _canvas.height,\n\t_canvasWidthHalf = Math.floor( _canvasWidth / 2 ),\n\t_canvasHeightHalf = Math.floor( _canvasHeight / 2 ),\n\n\t_viewportX = 0,\n\t_viewportY = 0,\n\t_viewportWidth = _canvasWidth,\n\t_viewportHeight = _canvasHeight,\n\n\t_pixelRatio = 1,\n\n\t_context = _canvas.getContext( '2d', {\n\t\talpha: parameters.alpha === true\n\t} ),\n\n\t_clearColor = new THREE.Color( 0x000000 ),\n\t_clearAlpha = parameters.alpha === true ? 0 : 1,\n\n\t_contextGlobalAlpha = 1,\n\t_contextGlobalCompositeOperation = 0,\n\t_contextStrokeStyle = null,\n\t_contextFillStyle = null,\n\t_contextLineWidth = null,\n\t_contextLineCap = null,\n\t_contextLineJoin = null,\n\t_contextLineDash = [],\n\n\t_camera,\n\n\t_v1, _v2, _v3, _v4,\n\t_v5 = new THREE.RenderableVertex(),\n\t_v6 = new THREE.RenderableVertex(),\n\n\t_v1x, _v1y, _v2x, _v2y, _v3x, _v3y,\n\t_v4x, _v4y, _v5x, _v5y, _v6x, _v6y,\n\n\t_color = new THREE.Color(),\n\t_color1 = new THREE.Color(),\n\t_color2 = new THREE.Color(),\n\t_color3 = new THREE.Color(),\n\t_color4 = new THREE.Color(),\n\n\t_diffuseColor = new THREE.Color(),\n\t_emissiveColor = new THREE.Color(),\n\n\t_lightColor = new THREE.Color(),\n\n\t_patterns = {},\n\n\t_image, _uvs,\n\t_uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y,\n\n\t_clipBox = new THREE.Box2(),\n\t_clearBox = new THREE.Box2(),\n\t_elemBox = new THREE.Box2(),\n\n\t_ambientLight = new THREE.Color(),\n\t_directionalLights = new THREE.Color(),\n\t_pointLights = new THREE.Color(),\n\n\t_vector3 = new THREE.Vector3(), // Needed for PointLight\n\t_centroid = new THREE.Vector3(),\n\t_normal = new THREE.Vector3(),\n\t_normalViewMatrix = new THREE.Matrix3();\n\n\t/* TODO\n\t_canvas.mozImageSmoothingEnabled = false;\n\t_canvas.webkitImageSmoothingEnabled = false;\n\t_canvas.msImageSmoothingEnabled = false;\n\t_canvas.imageSmoothingEnabled = false;\n\t*/\n\n\t// dash+gap fallbacks for Firefox and everything else\n\n\tif ( _context.setLineDash === undefined ) {\n\n\t\t_context.setLineDash = function () {};\n\n\t}\n\n\tthis.domElement = _canvas;\n\n\tthis.autoClear = true;\n\tthis.sortObjects = true;\n\tthis.sortElements = true;\n\n\tthis.info = {\n\n\t\trender: {\n\n\t\t\tvertices: 0,\n\t\t\tfaces: 0\n\n\t\t}\n\n\t};\n\n\t// WebGLRenderer compatibility\n\n\tthis.supportsVertexTextures = function () {};\n\tthis.setFaceCulling = function () {};\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _context;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _context.getContextAttributes();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value !== undefined ) _pixelRatio = value;\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\t_canvasWidth = width * _pixelRatio;\n\t\t_canvasHeight = height * _pixelRatio;\n\n\t\t_canvas.width = _canvasWidth;\n\t\t_canvas.height = _canvasHeight;\n\n\t\t_canvasWidthHalf = Math.floor( _canvasWidth / 2 );\n\t\t_canvasHeightHalf = Math.floor( _canvasHeight / 2 );\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\t_clipBox.min.set( - _canvasWidthHalf, - _canvasHeightHalf );\n\t\t_clipBox.max.set(   _canvasWidthHalf,   _canvasHeightHalf );\n\n\t\t_clearBox.min.set( - _canvasWidthHalf, - _canvasHeightHalf );\n\t\t_clearBox.max.set(   _canvasWidthHalf,   _canvasHeightHalf );\n\n\t\t_contextGlobalAlpha = 1;\n\t\t_contextGlobalCompositeOperation = 0;\n\t\t_contextStrokeStyle = null;\n\t\t_contextFillStyle = null;\n\t\t_contextLineWidth = null;\n\t\t_contextLineCap = null;\n\t\t_contextLineJoin = null;\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t_viewportX = x * _pixelRatio;\n\t\t_viewportY = y * _pixelRatio;\n\n\t\t_viewportWidth = width * _pixelRatio;\n\t\t_viewportHeight = height * _pixelRatio;\n\n\t};\n\n\tthis.setScissor = function () {};\n\tthis.setScissorTest = function () {};\n\n\tthis.setClearColor = function ( color, alpha ) {\n\n\t\t_clearColor.set( color );\n\t\t_clearAlpha = alpha !== undefined ? alpha : 1;\n\n\t\t_clearBox.min.set( - _canvasWidthHalf, - _canvasHeightHalf );\n\t\t_clearBox.max.set(   _canvasWidthHalf,   _canvasHeightHalf );\n\n\t};\n\n\tthis.setClearColorHex = function ( hex, alpha ) {\n\n\t\tconsole.warn( 'THREE.CanvasRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead.' );\n\t\tthis.setClearColor( hex, alpha );\n\n\t};\n\n\tthis.getClearColor = function () {\n\n\t\treturn _clearColor;\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn _clearAlpha;\n\n\t};\n\n\tthis.getMaxAnisotropy = function () {\n\n\t\treturn 0;\n\n\t};\n\n\tthis.clear = function () {\n\n\t\tif ( _clearBox.isEmpty() === false ) {\n\n\t\t\t_clearBox.intersect( _clipBox );\n\t\t\t_clearBox.expandByScalar( 2 );\n\n\t\t\t_clearBox.min.x = _clearBox.min.x + _canvasWidthHalf;\n\t\t\t_clearBox.min.y =  - _clearBox.min.y + _canvasHeightHalf;\t\t// higher y value !\n\t\t\t_clearBox.max.x = _clearBox.max.x + _canvasWidthHalf;\n\t\t\t_clearBox.max.y =  - _clearBox.max.y + _canvasHeightHalf;\t\t// lower y value !\n\n\t\t\tif ( _clearAlpha < 1 ) {\n\n\t\t\t\t_context.clearRect(\n\t\t\t\t\t_clearBox.min.x | 0,\n\t\t\t\t\t_clearBox.max.y | 0,\n\t\t\t\t\t( _clearBox.max.x - _clearBox.min.x ) | 0,\n\t\t\t\t\t( _clearBox.min.y - _clearBox.max.y ) | 0\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( _clearAlpha > 0 ) {\n\n\t\t\t\tsetBlending( THREE.NormalBlending );\n\t\t\t\tsetOpacity( 1 );\n\n\t\t\t\tsetFillStyle( 'rgba(' + Math.floor( _clearColor.r * 255 ) + ',' + Math.floor( _clearColor.g * 255 ) + ',' + Math.floor( _clearColor.b * 255 ) + ',' + _clearAlpha + ')' );\n\n\t\t\t\t_context.fillRect(\n\t\t\t\t\t_clearBox.min.x | 0,\n\t\t\t\t\t_clearBox.max.y | 0,\n\t\t\t\t\t( _clearBox.max.x - _clearBox.min.x ) | 0,\n\t\t\t\t\t( _clearBox.min.y - _clearBox.max.y ) | 0\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\t_clearBox.makeEmpty();\n\n\t\t}\n\n\t};\n\n\t// compatibility\n\n\tthis.clearColor = function () {};\n\tthis.clearDepth = function () {};\n\tthis.clearStencil = function () {};\n\n\tthis.render = function ( scene, camera ) {\n\n\t\tif ( camera instanceof THREE.Camera === false ) {\n\n\t\t\tconsole.error( 'THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar background = scene.background;\n\n\t\tif ( background && background.isColor ) {\n\n\t\t\tsetFillStyle( 'rgb(' + Math.floor( background.r * 255 ) + ',' + Math.floor( background.g * 255 ) + ',' + Math.floor( background.b * 255 ) + ')' );\n\t\t\t_context.fillRect( 0, 0, _canvasWidth, _canvasHeight );\n\n\t\t} else if ( this.autoClear === true ) {\n\n\t\t\tthis.clear();\n\n\t\t}\n\n\t\t_this.info.render.vertices = 0;\n\t\t_this.info.render.faces = 0;\n\n\t\t_context.setTransform( _viewportWidth / _canvasWidth, 0, 0, - _viewportHeight / _canvasHeight, _viewportX, _canvasHeight - _viewportY );\n\t\t_context.translate( _canvasWidthHalf, _canvasHeightHalf );\n\n\t\t_renderData = _projector.projectScene( scene, camera, this.sortObjects, this.sortElements );\n\t\t_elements = _renderData.elements;\n\t\t_lights = _renderData.lights;\n\t\t_camera = camera;\n\n\t\t_normalViewMatrix.getNormalMatrix( camera.matrixWorldInverse );\n\n\t\t/* DEBUG\n\t\tsetFillStyle( 'rgba( 0, 255, 255, 0.5 )' );\n\t\t_context.fillRect( _clipBox.min.x, _clipBox.min.y, _clipBox.max.x - _clipBox.min.x, _clipBox.max.y - _clipBox.min.y );\n\t\t*/\n\n\t\tcalculateLights();\n\n\t\tfor ( var e = 0, el = _elements.length; e < el; e ++ ) {\n\n\t\t\tvar element = _elements[ e ];\n\n\t\t\tvar material = element.material;\n\n\t\t\tif ( material === undefined || material.opacity === 0 ) continue;\n\n\t\t\t_elemBox.makeEmpty();\n\n\t\t\tif ( element instanceof THREE.RenderableSprite ) {\n\n\t\t\t\t_v1 = element;\n\t\t\t\t_v1.x *= _canvasWidthHalf; _v1.y *= _canvasHeightHalf;\n\n\t\t\t\trenderSprite( _v1, element, material );\n\n\t\t\t} else if ( element instanceof THREE.RenderableLine ) {\n\n\t\t\t\t_v1 = element.v1; _v2 = element.v2;\n\n\t\t\t\t_v1.positionScreen.x *= _canvasWidthHalf; _v1.positionScreen.y *= _canvasHeightHalf;\n\t\t\t\t_v2.positionScreen.x *= _canvasWidthHalf; _v2.positionScreen.y *= _canvasHeightHalf;\n\n\t\t\t\t_elemBox.setFromPoints( [\n\t\t\t\t\t_v1.positionScreen,\n\t\t\t\t\t_v2.positionScreen\n\t\t\t\t] );\n\n\t\t\t\tif ( _clipBox.intersectsBox( _elemBox ) === true ) {\n\n\t\t\t\t\trenderLine( _v1, _v2, element, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( element instanceof THREE.RenderableFace ) {\n\n\t\t\t\t_v1 = element.v1; _v2 = element.v2; _v3 = element.v3;\n\n\t\t\t\tif ( _v1.positionScreen.z < - 1 || _v1.positionScreen.z > 1 ) continue;\n\t\t\t\tif ( _v2.positionScreen.z < - 1 || _v2.positionScreen.z > 1 ) continue;\n\t\t\t\tif ( _v3.positionScreen.z < - 1 || _v3.positionScreen.z > 1 ) continue;\n\n\t\t\t\t_v1.positionScreen.x *= _canvasWidthHalf; _v1.positionScreen.y *= _canvasHeightHalf;\n\t\t\t\t_v2.positionScreen.x *= _canvasWidthHalf; _v2.positionScreen.y *= _canvasHeightHalf;\n\t\t\t\t_v3.positionScreen.x *= _canvasWidthHalf; _v3.positionScreen.y *= _canvasHeightHalf;\n\n\t\t\t\tif ( material.overdraw > 0 ) {\n\n\t\t\t\t\texpand( _v1.positionScreen, _v2.positionScreen, material.overdraw );\n\t\t\t\t\texpand( _v2.positionScreen, _v3.positionScreen, material.overdraw );\n\t\t\t\t\texpand( _v3.positionScreen, _v1.positionScreen, material.overdraw );\n\n\t\t\t\t}\n\n\t\t\t\t_elemBox.setFromPoints( [\n\t\t\t\t\t_v1.positionScreen,\n\t\t\t\t\t_v2.positionScreen,\n\t\t\t\t\t_v3.positionScreen\n\t\t\t\t] );\n\n\t\t\t\tif ( _clipBox.intersectsBox( _elemBox ) === true ) {\n\n\t\t\t\t\trenderFace3( _v1, _v2, _v3, 0, 1, 2, element, material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* DEBUG\n\t\t\tsetLineWidth( 1 );\n\t\t\tsetStrokeStyle( 'rgba( 0, 255, 0, 0.5 )' );\n\t\t\t_context.strokeRect( _elemBox.min.x, _elemBox.min.y, _elemBox.max.x - _elemBox.min.x, _elemBox.max.y - _elemBox.min.y );\n\t\t\t*/\n\n\t\t\t_clearBox.union( _elemBox );\n\n\t\t}\n\n\t\t/* DEBUG\n\t\tsetLineWidth( 1 );\n\t\tsetStrokeStyle( 'rgba( 255, 0, 0, 0.5 )' );\n\t\t_context.strokeRect( _clearBox.min.x, _clearBox.min.y, _clearBox.max.x - _clearBox.min.x, _clearBox.max.y - _clearBox.min.y );\n\t\t*/\n\n\t\t_context.setTransform( 1, 0, 0, 1, 0, 0 );\n\n\t};\n\n\t//\n\n\tfunction calculateLights() {\n\n\t\t_ambientLight.setRGB( 0, 0, 0 );\n\t\t_directionalLights.setRGB( 0, 0, 0 );\n\t\t_pointLights.setRGB( 0, 0, 0 );\n\n\t\tfor ( var l = 0, ll = _lights.length; l < ll; l ++ ) {\n\n\t\t\tvar light = _lights[ l ];\n\t\t\tvar lightColor = light.color;\n\n\t\t\tif ( light instanceof THREE.AmbientLight ) {\n\n\t\t\t\t_ambientLight.add( lightColor );\n\n\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\n\n\t\t\t\t// for sprites\n\n\t\t\t\t_directionalLights.add( lightColor );\n\n\t\t\t} else if ( light instanceof THREE.PointLight ) {\n\n\t\t\t\t// for sprites\n\n\t\t\t\t_pointLights.add( lightColor );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction calculateLight( position, normal, color ) {\n\n\t\tfor ( var l = 0, ll = _lights.length; l < ll; l ++ ) {\n\n\t\t\tvar light = _lights[ l ];\n\n\t\t\t_lightColor.copy( light.color );\n\n\t\t\tif ( light instanceof THREE.DirectionalLight ) {\n\n\t\t\t\tvar lightPosition = _vector3.setFromMatrixPosition( light.matrixWorld ).normalize();\n\n\t\t\t\tvar amount = normal.dot( lightPosition );\n\n\t\t\t\tif ( amount "},{"title":"","date":"2022-10-09T08:35:51.274Z","updated":"2022-10-09T08:35:51.274Z","content":"/**\n * Created by Tang on 2017/4/15.\n */\n$(function () {\n  var mouseX = 0,\n    mouseY = 0,\n    windowHalfX = window.innerWidth / 2,\n    windowHalfY = window.innerHeight / 2,\n    SEPARATION = 200,\n    AMOUNTX = 10,\n    AMOUNTY = 10,\n    camera, scene, renderer;\n  init();\n  animate();\n\n  function init() {\n    var container, separation = 100,\n      amountX = 50,\n      amountY = 50,\n      particles, particle;\n    container = document.createElement('div');\n    // 设置css\n    container.style.position = \"fixed\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.zIndex = \"-1\";\n    container.style.opacity = \"0.5\";\n\n    document.body.appendChild(container);\n    camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 1, 10000);\n    camera.position.z = 100;\n    scene = new THREE.Scene();\n    renderer = new THREE.CanvasRenderer({\n      alpha: true\n    });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    container.appendChild(renderer.domElement);\n    // particles\n    var PI2 = Math.PI * 2;\n    var material = new THREE.SpriteCanvasMaterial({\n      color: 10263708,\n      program: function (context) {\n        context.beginPath();\n        context.arc(0, 0, 0.5, 0, PI2, true);\n        context.fill();\n      }\n    });\n    var geometry = new THREE.Geometry();\n    for (var i = 0; i < 100; i++) {\n      particle = new THREE.Sprite(material);\n      particle.position.x = Math.random() * 2 - 1;\n      particle.position.y = Math.random() * 2 - 1;\n      particle.position.z = Math.random() * 2 - 1;\n      particle.position.normalize();\n      particle.position.multiplyScalar(Math.random() * 10 + 450);\n      particle.scale.x = particle.scale.y = 10;\n      scene.add(particle);\n      geometry.vertices.push(particle.position);\n    }\n    // lines\n    var line = new THREE.Line(geometry, new THREE.LineBasicMaterial({\n      color: 10263708,\n      opacity: 0.5\n    }));\n    scene.add(line);\n    document.addEventListener('mousemove', onDocumentMouseMove, false);\n    document.addEventListener('touchstart', onDocumentTouchStart, false);\n    document.addEventListener('touchmove', onDocumentTouchMove, false);\n    //\n    window.addEventListener('resize', onWindowResize, false);\n  }\n\n  function onWindowResize() {\n    windowHalfX = window.innerWidth / 2;\n    windowHalfY = window.innerHeight / 2;\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n  }\n  //\n  function onDocumentMouseMove(event) {\n    mouseX = event.clientX - windowHalfX;\n    mouseY = event.clientY - windowHalfY;\n  }\n\n  function onDocumentTouchStart(event) {\n    if (event.touches.length > 1) {\n      //event.preventDefault();\n      mouseX = event.touches[0].pageX - windowHalfX;\n      //mouseY = event.touches[ 0 ].pageY - windowHalfY;\n    }\n  }\n\n  function onDocumentTouchMove(event) {\n    if (event.touches.length == 1) {\n      //event.preventDefault();\n      mouseX = event.touches[0].pageX - windowHalfX;\n      //mouseY = event.touches[ 0 ].pageY - windowHalfY;\n    }\n  }\n  //\n  function animate() {\n    requestAnimationFrame(animate);\n    render();\n  }\n\n  function render() {\n    camera.position.x += (mouseX - camera.position.x) * .05;\n    camera.position.y += (-mouseY + 200 - camera.position.y) * .05;\n    camera.lookAt(scene.position);\n    renderer.render(scene, camera);\n  }\n})"},{"title":"","date":"2022-10-09T08:35:51.274Z","updated":"2022-10-09T08:35:51.274Z","content":"/**\n * Created by Tang on 2017/4/15.\n */\n$(function () {\n  var SCREEN_WIDTH = window.innerWidth,\n    SCREEN_HEIGHT = window.innerHeight,\n    mouseX = 0,\n    mouseY = 0,\n    windowHalfX = window.innerWidth / 2,\n    windowHalfY = window.innerHeight / 2,\n    SEPARATION = 200,\n    AMOUNTX = 10,\n    AMOUNTY = 10,\n    camera, scene, renderer;\n  init();\n  animate();\n\n  function init() {\n    var container, separation = 100,\n      amountX = 50,\n      amountY = 50,\n      particles, particle;\n    container = document.createElement('div');\n    // 设置css\n    container.style.position = \"fixed\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.zIndex = \"-1\";\n    container.style.opacity = \"0.5\";\n\n    document.body.appendChild(container);\n    camera = new THREE.PerspectiveCamera(75, SCREEN_WIDTH / SCREEN_HEIGHT, 1, 10000);\n    camera.position.z = 1000;\n    scene = new THREE.Scene();\n    renderer = new THREE.CanvasRenderer({\n      alpha: true\n    });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(SCREEN_WIDTH, SCREEN_HEIGHT);\n    container.appendChild(renderer.domElement);\n    // particles\n    var PI2 = Math.PI * 2;\n    var material = new THREE.SpriteCanvasMaterial({\n      color: 10263708,\n      program: function (context) {\n        context.beginPath();\n        context.arc(0, 0, 0.5, 0, PI2, true);\n        context.fill();\n      }\n    });\n    for (var i = 0; i < 1000; i++) {\n      particle = new THREE.Sprite(material);\n      particle.position.x = Math.random() * 2 - 1;\n      particle.position.y = Math.random() * 2 - 1;\n      particle.position.z = Math.random() * 2 - 1;\n      particle.position.normalize();\n      particle.position.multiplyScalar(Math.random() * 10 + 450);\n      particle.scale.multiplyScalar(2);\n      scene.add(particle);\n    }\n    // lines\n    for (var i = 0; i < 300; i++) {\n      var geometry = new THREE.Geometry();\n      var vertex = new THREE.Vector3(Math.random() * 2 - 1, Math.random() * 2 - 1, Math.random() * 2 - 1);\n      vertex.normalize();\n      vertex.multiplyScalar(450);\n      geometry.vertices.push(vertex);\n      var vertex2 = vertex.clone();\n      vertex2.multiplyScalar(Math.random() * 0.3 + 1);\n      geometry.vertices.push(vertex2);\n      var line = new THREE.Line(geometry, new THREE.LineBasicMaterial({\n        color: 10263708,\n        opacity: Math.random()\n      }));\n      scene.add(line);\n    }\n    document.addEventListener('mousemove', onDocumentMouseMove, false);\n    document.addEventListener('touchstart', onDocumentTouchStart, false);\n    document.addEventListener('touchmove', onDocumentTouchMove, false);\n    //\n    window.addEventListener('resize', onWindowResize, false);\n  }\n\n  function onWindowResize() {\n    windowHalfX = window.innerWidth / 2;\n    windowHalfY = window.innerHeight / 2;\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n  }\n  //\n  function onDocumentMouseMove(event) {\n    mouseX = event.clientX - windowHalfX;\n    mouseY = event.clientY - windowHalfY;\n  }\n\n  function onDocumentTouchStart(event) {\n    if (event.touches.length > 1) {\n      //event.preventDefault();\n      mouseX = event.touches[0].pageX - windowHalfX;\n      //mouseY = event.touches[ 0 ].pageY - windowHalfY;\n    }\n  }\n\n  function onDocumentTouchMove(event) {\n    if (event.touches.length == 1) {\n      //event.preventDefault();\n      mouseX = event.touches[0].pageX - windowHalfX;\n      //mouseY = event.touches[ 0 ].pageY - windowHalfY;\n    }\n  }\n  //\n  function animate() {\n    requestAnimationFrame(animate);\n    render();\n  }\n\n  function render() {\n    camera.position.x += (mouseX - camera.position.x) * .05;\n    camera.position.y += (-mouseY + 200 - camera.position.y) * .05;\n    camera.lookAt(scene.position);\n    renderer.render(scene, camera);\n  }\n})"},{"title":"","date":"2022-10-09T08:35:51.275Z","updated":"2022-10-09T08:35:51.275Z","content":"$(function () {\n  var SEPARATION = 100,\n    AMOUNTX = 50,\n    AMOUNTY = 50;\n  var container;\n  var camera, scene, renderer;\n  var particles, particle, count = 0;\n  var mouseX = 0,\n    mouseY = 0;\n  var windowHalfX = window.innerWidth / 2;\n  var windowHalfY = window.innerHeight / 2;\n  init();\n  animate();\n\n  function init() {\n    container = document.createElement(\"div\");\n    container.style.position = \"fixed\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.zIndex = \"-1\";\n    container.style.opacity = \"0.5\";\n    document.body.appendChild(container);\n    camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 1, 10000);\n    camera.position.z = 1000;\n    scene = new THREE.Scene();\n    particles = new Array();\n    var PI2 = Math.PI * 2;\n    var material = new THREE.SpriteCanvasMaterial({\n      color: 10263708,\n      program: function (context) {\n        context.beginPath();\n        context.arc(0, 0, 0.5, 0, PI2, true);\n        context.fill()\n      }\n    });\n    var i = 0;\n    for (var ix = 0; ix < AMOUNTX; ix++) {\n      for (var iy = 0; iy < AMOUNTY; iy++) {\n        particle = particles[i++] = new THREE.Sprite(material);\n        particle.position.x = ix * SEPARATION - ((AMOUNTX * SEPARATION) / 2);\n        particle.position.z = iy * SEPARATION - ((AMOUNTY * SEPARATION) / 2);\n        scene.add(particle)\n      }\n    }\n    renderer = new THREE.CanvasRenderer({\n      alpha: true\n    });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    container.appendChild(renderer.domElement);\n    document.addEventListener(\"mousemove\", onDocumentMouseMove, false);\n    window.addEventListener(\"resize\", onWindowResize, false)\n  }\n\n  function onWindowResize() {\n    windowHalfX = window.innerWidth / 2;\n    windowHalfY = window.innerHeight / 2;\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n    renderer.setSize(window.innerWidth, window.innerHeight)\n  }\n\n  function onDocumentMouseMove(event) {\n    mouseX = event.clientX - windowHalfX\n  }\n\n  function animate() {\n    requestAnimationFrame(animate);\n    render()\n  }\n\n  function render() {\n    camera.position.x += (mouseX - camera.position.x) * 0.05;\n    camera.position.y = 362.05;\n    camera.lookAt({\n      x: scene.position.x,\n      y: window.innerHeight / 3,\n      z: scene.position.z\n    });\n    var i = 0;\n    for (var ix = 0; ix < AMOUNTX; ix++) {\n      for (var iy = 0; iy < AMOUNTY; iy++) {\n        particle = particles[i++];\n        particle.position.y = (Math.sin((ix + count) * 0.3) * 50) + (Math.sin((iy + count) * 0.5) * 50);\n        particle.scale.x = particle.scale.y = (Math.sin((ix + count) * 0.3) + 1) * 4 + (Math.sin((iy + count) * 0.5) + 1) * 4\n      }\n    }\n    renderer.render(scene, camera);\n    count += 0.1\n  }\n});"},{"title":"","date":"2022-10-09T08:35:51.273Z","updated":"2022-10-09T08:35:51.273Z","content":"/**\n * @author mrdoob / http://mrdoob.com/\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author julianwa / https://github.com/julianwa\n */\n\nTHREE.RenderableObject = function () {\n\n\tthis.id = 0;\n\n\tthis.object = null;\n\tthis.z = 0;\n\tthis.renderOrder = 0;\n\n};\n\n//\n\nTHREE.RenderableFace = function () {\n\n\tthis.id = 0;\n\n\tthis.v1 = new THREE.RenderableVertex();\n\tthis.v2 = new THREE.RenderableVertex();\n\tthis.v3 = new THREE.RenderableVertex();\n\n\tthis.normalModel = new THREE.Vector3();\n\n\tthis.vertexNormalsModel = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];\n\tthis.vertexNormalsLength = 0;\n\n\tthis.color = new THREE.Color();\n\tthis.material = null;\n\tthis.uvs = [ new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() ];\n\n\tthis.z = 0;\n\tthis.renderOrder = 0;\n\n};\n\n//\n\nTHREE.RenderableVertex = function () {\n\n\tthis.position = new THREE.Vector3();\n\tthis.positionWorld = new THREE.Vector3();\n\tthis.positionScreen = new THREE.Vector4();\n\n\tthis.visible = true;\n\n};\n\nTHREE.RenderableVertex.prototype.copy = function ( vertex ) {\n\n\tthis.positionWorld.copy( vertex.positionWorld );\n\tthis.positionScreen.copy( vertex.positionScreen );\n\n};\n\n//\n\nTHREE.RenderableLine = function () {\n\n\tthis.id = 0;\n\n\tthis.v1 = new THREE.RenderableVertex();\n\tthis.v2 = new THREE.RenderableVertex();\n\n\tthis.vertexColors = [ new THREE.Color(), new THREE.Color() ];\n\tthis.material = null;\n\n\tthis.z = 0;\n\tthis.renderOrder = 0;\n\n};\n\n//\n\nTHREE.RenderableSprite = function () {\n\n\tthis.id = 0;\n\n\tthis.object = null;\n\n\tthis.x = 0;\n\tthis.y = 0;\n\tthis.z = 0;\n\n\tthis.rotation = 0;\n\tthis.scale = new THREE.Vector2();\n\n\tthis.material = null;\n\tthis.renderOrder = 0;\n\n};\n\n//\n\nTHREE.Projector = function () {\n\n\tvar _object, _objectCount, _objectPool = [], _objectPoolLength = 0,\n\t_vertex, _vertexCount, _vertexPool = [], _vertexPoolLength = 0,\n\t_face, _faceCount, _facePool = [], _facePoolLength = 0,\n\t_line, _lineCount, _linePool = [], _linePoolLength = 0,\n\t_sprite, _spriteCount, _spritePool = [], _spritePoolLength = 0,\n\n\t_renderData = { objects: [], lights: [], elements: [] },\n\n\t_vector3 = new THREE.Vector3(),\n\t_vector4 = new THREE.Vector4(),\n\n\t_clipBox = new THREE.Box3( new THREE.Vector3( - 1, - 1, - 1 ), new THREE.Vector3( 1, 1, 1 ) ),\n\t_boundingBox = new THREE.Box3(),\n\t_points3 = new Array( 3 ),\n\t_points4 = new Array( 4 ),\n\n\t_viewMatrix = new THREE.Matrix4(),\n\t_viewProjectionMatrix = new THREE.Matrix4(),\n\n\t_modelMatrix,\n\t_modelViewProjectionMatrix = new THREE.Matrix4(),\n\n\t_normalMatrix = new THREE.Matrix3(),\n\n\t_frustum = new THREE.Frustum(),\n\n\t_clippedVertex1PositionScreen = new THREE.Vector4(),\n\t_clippedVertex2PositionScreen = new THREE.Vector4();\n\n\t//\n\n\tthis.projectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\n\t\tvector.project( camera );\n\n\t};\n\n\tthis.unprojectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\n\t\tvector.unproject( camera );\n\n\t};\n\n\tthis.pickingRay = function ( vector, camera ) {\n\n\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\n\n\t};\n\n\t//\n\n\tvar RenderList = function () {\n\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\tvar object = null;\n\t\tvar material = null;\n\n\t\tvar normalMatrix = new THREE.Matrix3();\n\n\t\tfunction setObject( value ) {\n\n\t\t\tobject = value;\n\t\t\tmaterial = object.material;\n\n\t\t\tnormalMatrix.getNormalMatrix( object.matrixWorld );\n\n\t\t\tnormals.length = 0;\n\t\t\tuvs.length = 0;\n\n\t\t}\n\n\t\tfunction projectVertex( vertex ) {\n\n\t\t\tvar position = vertex.position;\n\t\t\tvar positionWorld = vertex.positionWorld;\n\t\t\tvar positionScreen = vertex.positionScreen;\n\n\t\t\tpositionWorld.copy( position ).applyMatrix4( _modelMatrix );\n\t\t\tpositionScreen.copy( positionWorld ).applyMatrix4( _viewProjectionMatrix );\n\n\t\t\tvar invW = 1 / positionScreen.w;\n\n\t\t\tpositionScreen.x *= invW;\n\t\t\tpositionScreen.y *= invW;\n\t\t\tpositionScreen.z *= invW;\n\n\t\t\tvertex.visible = positionScreen.x >= - 1 && positionScreen.x = - 1 && positionScreen.y = - 1 && positionScreen.z "},{"title":"","date":"2022-10-09T08:35:51.277Z","updated":"2022-10-09T08:35:51.277Z","content":"// threejs.org/license\n(function(l,pa){\"object\"===typeof exports&&\"undefined\"!==typeof module?pa(exports):\"function\"===typeof define&&define.amd?define([\"exports\"],pa):pa(l.THREE=l.THREE||{})})(this,function(l){function pa(){}function D(a,b){this.x=a||0;this.y=b||0}function ea(a,b,c,d,e,f,g,h,m,k){Object.defineProperty(this,\"id\",{value:Ze++});this.uuid=N.generateUUID();this.name=\"\";this.image=void 0!==a?a:ea.DEFAULT_IMAGE;this.mipmaps=[];this.mapping=void 0!==b?b:ea.DEFAULT_MAPPING;this.wrapS=void 0!==c?c:1001;this.wrapT=\nvoid 0!==d?d:1001;this.magFilter=void 0!==e?e:1006;this.minFilter=void 0!==f?f:1008;this.anisotropy=void 0!==m?m:1;this.format=void 0!==g?g:1023;this.type=void 0!==h?h:1009;this.offset=new D(0,0);this.repeat=new D(1,1);this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.unpackAlignment=4;this.encoding=void 0!==k?k:3E3;this.version=0;this.onUpdate=null}function fa(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1}function Ya(a,b,c){this.uuid=N.generateUUID();this.width=\na;this.height=b;this.scissor=new fa(0,0,a,b);this.scissorTest=!1;this.viewport=new fa(0,0,a,b);c=c||{};void 0===c.minFilter&&(c.minFilter=1006);this.texture=new ea(void 0,void 0,c.wrapS,c.wrapT,c.magFilter,c.minFilter,c.format,c.type,c.anisotropy,c.encoding);this.depthBuffer=void 0!==c.depthBuffer?c.depthBuffer:!0;this.stencilBuffer=void 0!==c.stencilBuffer?c.stencilBuffer:!0;this.depthTexture=void 0!==c.depthTexture?c.depthTexture:null}function Gb(a,b,c){Ya.call(this,a,b,c);this.activeMipMapLevel=\nthis.activeCubeFace=0}function ca(a,b,c,d){this._x=a||0;this._y=b||0;this._z=c||0;this._w=void 0!==d?d:1}function q(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0}function S(){this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]);0=\nd||0"}]